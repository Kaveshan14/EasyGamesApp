/*
Deployment script for EasyGamesAppClientDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "EasyGamesAppClientDB"
:setvar DefaultFilePrefix "EasyGamesAppClientDB"
:setvar DefaultDataPath "C:\Users\Proline\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Proline\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[ClientTable]...';


GO
CREATE TABLE [dbo].[ClientTable] (
    [ClientID]      INT             NOT NULL,
    [Name]          NVARCHAR (50)   NOT NULL,
    [Surname]       NVARCHAR (50)   NOT NULL,
    [ClientBalance] DECIMAL (18, 2) NOT NULL,
    PRIMARY KEY CLUSTERED ([ClientID] ASC)
);


GO
PRINT N'Creating Table [dbo].[TransactionTable]...';


GO
CREATE TABLE [dbo].[TransactionTable] (
    [TransactionID]     BIGINT          NOT NULL,
    [Amount]            DECIMAL (18, 2) NOT NULL,
    [TransactionTypeID] SMALLINT        NOT NULL,
    [ClientID]          INT             NOT NULL,
    [Comment]           NVARCHAR (100)  NULL,
    PRIMARY KEY CLUSTERED ([TransactionID] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Transaction_TransactionTypeTable]...';


GO
ALTER TABLE [dbo].[TransactionTable] WITH NOCHECK
    ADD CONSTRAINT [FK_Transaction_TransactionTypeTable] FOREIGN KEY ([TransactionTypeID]) REFERENCES [dbo].[TransactionTypeTable] ([TransactionTypeID ]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Transaction_Client]...';


GO
ALTER TABLE [dbo].[TransactionTable] WITH NOCHECK
    ADD CONSTRAINT [FK_Transaction_Client] FOREIGN KEY ([ClientID]) REFERENCES [dbo].[ClientTable] ([ClientID]);


GO
PRINT N'Creating Procedure [dbo].[sp_GetAllClients]...';


GO
CREATE PROCEDURE [dbo].[sp_GetAllClients]
    AS
	begin
	SELECT *
	FROM [dbo].[ClientTable]
	end
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
if not exists(select 1 from dbo.[TransactionTypeTable])
begin
 insert into dbo.[TransactionTypeTable] (TransactionTypeID,TransactionTypeName)
 values ('1','Debit'),
 ('2','Credit')
 end
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[TransactionTable] WITH CHECK CHECK CONSTRAINT [FK_Transaction_TransactionTypeTable];

ALTER TABLE [dbo].[TransactionTable] WITH CHECK CHECK CONSTRAINT [FK_Transaction_Client];


GO
PRINT N'Update complete.';


GO
