/*
Deployment script for ClientNewDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ClientNewDB"
:setvar DefaultFilePrefix "ClientNewDB"
:setvar DefaultDataPath "C:\Users\Proline\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Proline\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Transaction_TransactionTypeTable]...';


GO
ALTER TABLE [dbo].[TransactionTable] DROP CONSTRAINT [FK_Transaction_TransactionTypeTable];


GO
PRINT N'Altering Table [dbo].[TransactionTable]...';


GO
ALTER TABLE [dbo].[TransactionTable] ALTER COLUMN [TransactionTypeID] INT NOT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[TransactionTypeTable]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TransactionTypeTable] (
    [TransactionTypeID ]  INT           NOT NULL,
    [TransactionTypeName] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([TransactionTypeID ] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TransactionTypeTable])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_TransactionTypeTable] ([TransactionTypeID ], [TransactionTypeName])
        SELECT   [TransactionTypeID ],
                 [TransactionTypeName]
        FROM     [dbo].[TransactionTypeTable]
        ORDER BY [TransactionTypeID ] ASC;
    END

DROP TABLE [dbo].[TransactionTypeTable];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TransactionTypeTable]', N'TransactionTypeTable';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Transaction_TransactionTypeTable]...';


GO
ALTER TABLE [dbo].[TransactionTable] WITH NOCHECK
    ADD CONSTRAINT [FK_Transaction_TransactionTypeTable] FOREIGN KEY ([TransactionTypeID]) REFERENCES [dbo].[TransactionTypeTable] ([TransactionTypeID ]);


GO
PRINT N'Altering Procedure [dbo].[sp_AddClientTransaction]...';


GO
ALTER PROCEDURE [dbo].[sp_AddClientTransaction]
@ID int,
@TransactionType int,
@Amount int
	AS
	begin
	INSERT INTO [dbo].[TransactionTable]
	(
	TransactionID,
	Amount,
	TransactionTypeID,
	ClientID
	)
	VALUES (
	MAX(TransactionID+1),
	@Amount,
	@TransactionType,
	@ID
	)
	END
GO
PRINT N'Refreshing Procedure [dbo].[sp_GetSingleClient]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetSingleClient]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
if not exists(select 1 from dbo.[TransactionTypeTable])
begin
 insert into dbo.[TransactionTypeTable] (TransactionTypeID,TransactionTypeName)
 values ('1','Debit'),
 ('2','Credit')
 end

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[TransactionTable] WITH CHECK CHECK CONSTRAINT [FK_Transaction_TransactionTypeTable];


GO
PRINT N'Update complete.';


GO
